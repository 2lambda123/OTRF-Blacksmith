{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "windowsDesktopSKU": {
            "type": "string",
            "defaultValue": "19h2-pro",
            "allowedValues": [
                "19h1-pro",
                "19h2-pro",
                "rs4-pro",
                "rs5-pro"
            ],
            "metadata": {
                "description": "The Windows version for the Desktop VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "windowsDesktopVmSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_A8_v2"
            ],
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "windowsServerSKU": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the Server VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "windowsServerVmSize": {
            "type": "string",
            "defaultValue": "Standard_A4_v2",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_A8_v2"
            ],
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/hunters-forge/Blacksmith/azure/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        },
        "domainFQDN": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"
            }
        },
        "allowedIPAddresses": {
            "type": "string",
            "metadata": {
                "description": "The sourceAddressPrefixes allowed to connect to this deployment"
            }
        },
        "domainJoinOptions": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
        "virtualNetworkName": "MordorVNET",
        "deploySentinelTemplateUri": "[uri(parameters('_artifactsLocation'), concat('azure/azureSentinel/azuredeploy.json', parameters('_artifactsLocationSasToken')))]",
        "customScriptTemplateUri": "[uri(parameters('_artifactsLocation'), concat('azure/mordor/nestedtemplates/customScriptExtension.json', parameters('_artifactsLocationSasToken')))]",
        "vnetTemplateUri": "[uri(parameters('_artifactsLocation'), concat('azure/mordor/nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
        "prepareBoxScript": "[uri(parameters('_artifactsLocation'), concat('scripts/powershell/misc/Prepare-Box.ps1', parameters('_artifactsLocationSasToken')))]",
        "enableSecurityAuditingScript": "[uri(parameters('_artifactsLocation'), concat('scripts/powershell/auditing/Enable-Security-Auditing.ps1', parameters('_artifactsLocationSasToken')))]",
        "setIPAddressScript": "[uri(parameters('_artifactsLocation'), concat('scripts/powershell/misc/Set-StaticIP.ps1', parameters('_artifactsLocationSasToken')))]",
        "setOUScript": "[uri(parameters('_artifactsLocation'), concat('scripts/powershell/active-directory/Set-OUs.ps1', parameters('_artifactsLocationSasToken')))]",
        "addDomainUsersScript": "[uri(parameters('_artifactsLocation'), concat('scripts/powershell/active-directory/Add-DomainUsers.ps1', parameters('_artifactsLocationSasToken')))]",
        "subnetName": "LAN",
        "virtualNetworkAddressRange": "172.18.0.0/16",
        "subnetRange": "172.18.39.0/24",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "hrVMName": "HR001",
        "hrPrivateIPAddress": "172.18.39.106",
        "acctVMName": "ACCT001",
        "acctPrivateIPAddress": "172.18.39.100",
        "itVMName": "IT001",
        "itPrivateIPAddress": "172.18.39.105",
        "dcVMName": "HFDC01",
        "dcPrivateIPAddress": "172.18.39.5",
        "desktopsVMList": "[concat(variables('hrVMName'), ',', variables('acctVMName'), ',', variables('itVMName'))]",
        "desktopsVMListArray": "[split(variables('desktopsVMList'),',')]",
        "allVMList": "[concat(variables('desktopsVMList'), ',', variables('dcVMName'))]",
        "allVMListArray": "[split(variables('allVMList'),',')]",
        "allPrivateIPList": "[concat(variables('hrPrivateIPAddress'), ',', variables('acctPrivateIPAddress'), ',', variables('itPrivateIPAddress'), ',', variables('dcPrivateIPAddress'))]",
        "allPrivateIPArray": "[split(variables('allPrivateIPList'),',')]",
        "ouPath": "[concat('OU=Workstations; DC=', parameters('dnsLabelPrefix'), '; DC=local')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "deploySentinel",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('deploySentinelTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(trim(variables('desktopsVMListArray')[copyIndex()]),'/OMSExtension')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', trim(variables('desktopsVMListArray')[copyIndex()]))]",
                "deploySentinel",
                "oneWorkstationSetup"
            ],
            "copy": {
                "name": "vmOMSExtensionCopy",
                "count": "[length(variables('desktopsVMListArray'))]"
            },
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[reference('deploySentinel').outputs.workspaceIdOutput.value]"
                },
                "protectedSettings": {
                    "workspaceKey": "[reference('deploySentinel').outputs.workspaceKeyOutput.value]"
                }
            }
        },
        {
            "name": "VNet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('subnetRange')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[concat(trim(variables('allVMListArray')[copyIndex()]),'PublicIP')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vmPublicIPCopy",
                "count": "[length(variables('allVMListArray'))]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(trim(variables('allVMListArray')[copyIndex()]))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[concat(trim(variables('allVMListArray')[copyIndex()]),'VMNic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', concat(trim(variables('allVMListArray')[copyIndex()]),'PublicIP'))]",
                "VNet"
            ],
            "copy": {
                "name": "vmNetworkInterfaceCopy",
                "count": "[length(variables('allVMListArray'))]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[trim(variables('allPrivateIPArray')[copyIndex()])]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(trim(variables('allVMListArray')[copyIndex()]),'PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "oneWorkstationSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('hrVMName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('acctVMName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('itVMName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extensionName": {
                        "value": "cse"
                    },
                    "commandToExecute": {
                        "value": "[concat('powershell -ExecutionPolicy Unrestricted -File ./1-workstationSetup.ps1',' ', '-ServerAddresses',' ', variables('dcPrivateIPAddress'))]"
                    },
                    "fileUris": {
                        "value": [
                            "https://raw.githubusercontent.com/hunters-forge/Blacksmith/azure/azure/mordor/scripts/1-workstationSetup.ps1",
                            "[variables('prepareBoxScript')]",
                            "[variables('enableSecurityAuditingScript')]",
                            "[variables('setIPAddressScript')]"
                        ]
                    },
                    "vmList": {
                        "value": "[variables('desktopsVMList')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "oneDCSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('dcVMName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extensionName": {
                        "value": "cse"
                    },
                    "commandToExecute": {
                        "value": "powershell -ExecutionPolicy Unrestricted -File ./1-dcSetup.ps1"
                    },
                    "fileUris": {
                        "value": [
                            "https://raw.githubusercontent.com/hunters-forge/Blacksmith/azure/azure/mordor/scripts/1-dcSetup.ps1",
                            "[variables('prepareBoxScript')]",
                            "[variables('enableSecurityAuditingScript')]"
                        ]
                    },
                    "vmList": {
                        "value": "[variables('dcVMName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(variables('dcVMName'), '/CreateADForest')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('dcVMName'))]",
                "oneDCSetup"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('azure/mordor/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken')))]",
                    "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                    "Properties": {
                        "DomainName": "[parameters('domainFQDN')]",
                        "AdminCreds": {
                            "UserName": "[parameters('adminUsername')]",
                            "Password": "PrivateSettingsRef:AdminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "Items": {
                        "AdminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "name": "twoDCSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcVMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extensionName": {
                        "value": "cse"
                    },
                    "commandToExecute": {
                        "value": "[concat('powershell -ExecutionPolicy Unrestricted -File ./2-dcSetup.ps1',' ', '-domainFQDN',' ', parameters('domainFQDN'),' ', '-dcVMName',' ', variables('dcVMName'))]"
                    },
                    "fileUris": {
                        "value": [
                            "https://raw.githubusercontent.com/hunters-forge/Blacksmith/azure/azure/mordor/scripts/2-dcSetup.ps1",
                            "[variables('setOUScript')]",
                            "[variables('addDomainUsersScript')]"
                        ]
                    },
                    "vmList": {
                        "value": "[variables('dcVMName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "UpdateVNetDNS",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcVMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('azure/mordor/nestedtemplates/vnet-dns-server.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('subnetRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('dcPrivateIPAddress')]"
                        ]
                    },
                    "nsgID": {
                        "value": "[reference('VNet').outputs.nsgID.value]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(trim(variables('desktopsVMListArray')[copyIndex()]),'/joindomain')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "oneWorkstationSetup",
                "twoDCSetup",
                "UpdateVNetDNS"
            ],
            "copy": {
                "name": "vmDomainJoinCopy",
                "count": "[length(variables('desktopsVMListArray'))]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainFQDN')]",
                    "User": "[concat(parameters('domainFQDN'), '\\', parameters('adminUsername'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]",
                    "OUPath": "[variables('ouPath')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('adminPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[trim(variables('desktopsVMListArray')[copyIndex()])]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(trim(variables('desktopsVMListArray')[copyIndex()]),'VMNic'))]"
            ],
            "copy": {
                "name": "vmDesktopCopy",
                "count": "[length(variables('desktopsVMListArray'))]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('windowsDesktopVmSize')]"
                },
                "osProfile": {
                    "computerName": "[trim(variables('desktopsVMListArray')[copyIndex()])]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "[parameters('windowsDesktopSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(trim(variables('desktopsVMListArray')[copyIndex()]),'VMNic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('dcVMName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', 'HFDC01VMNic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('windowsServerVmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('dcVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsServerSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','HFDC01VMNic')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}