{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Log Analytics workspace used to aggregate data"
            }
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "Returns the current (UTC) datetime value in the specified format. If no format is provided, the ISO 8601 (yyyyMMddTHHmmssZ) format is used"
            }
        },
        "pricingTier": {
            "type": "string",
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            }
        },
        "immediatePurgeDataOn30Days": {
            "type": "bool",
            "defaultValue": "[bool('false')]",
            "metadata": {
                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
            }
        },
        "deployWinVM": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to deploy a Win10 VM connected to your Log Analytics workspace along with Windows Connectors?"
            }
        },
        "enableWindowsConnectors": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to enable Windows connectors such as Windows Event Logs? "
            }
        },
        "securityCollectionTier": {
            "type": "string",
            "allowedValues": [
                "All",
                "Recommended",
                "Minimal",
                "None"
            ],
            "defaultValue": "Minimal",
            "metadata": {
                "description": "Tier for gathering Windows Security Events."
            }
        },
        "enableMDATPIntegration": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to enable Azure MDATP integration? "
            }
        },
        "enableAzureConnectors": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to enable Azure connectors such as Azure Activity Logs? "
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "allowedIPAddresses": {
            "type": "string",
            "metadata": {
                "description": "The sourceAddressPrefixes allowed to connect to the Windows 10 VM"
            },
            "defaultValue": "*"
        },
        "ingestMordor": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to ingest Mordor datasets to your Log Analytics workspace? Ref: https://mordordatasets.com"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources"
            },
            "defaultValue": "https://raw.githubusercontent.com/hunters-forge/Blacksmith/azure/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        },
        "adminPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
            },
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "uniqueWorkspace": "[concat(parameters('workspaceName'), uniquestring(resourceGroup().id, parameters('utcValue')))]",
        "customScriptTemplateUri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/Sentinel2Go/nestedtemplates/customScript.json', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('uniqueWorkspace')]",
            "location": "[parameters('location')]",
            "properties": {
                "retentionInDays": "[parameters('dataRetention')]",
                "features": {
                    "immediatePurgeDataOn30Days": "[parameters('immediatePurgeDataOn30Days')]"
                },
                "sku": {
                    "name": "[parameters('pricingTier')]"
                }
            }
        },
        {
            "name": "[concat('SecurityInsights','(', variables('uniqueWorkspace'),')')]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace'))]"
            ],
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueWorkspace'))]"
            },
            "plan": {
                "name": "[concat('SecurityInsights','(', variables('uniqueWorkspace'),')')]",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
            }
        },
        {
            "condition": "[parameters('enableWindowsConnectors')]",
            "type": "Microsoft.Resources/deployments",
            "name": "enableWindowsConnectors",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/Sentinel2Go/nestedtemplates/windowsConnectors.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[variables('uniqueWorkspace')]"
                    },
                    "workspaceId": {
                         "value": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace'))]"
                     },
                    "securityCollectionTier": {
                        "value": "[parameters('securityCollectionTier')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[and(parameters('enableWindowsConnectors'), parameters('deployWinVM'))]",
            "type": "Microsoft.Resources/deployments",
            "name": "deployWinVM",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "enableWindowsConnectors"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/Windows10VM/azuredeploy.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enableMonitoringAgent": {
                        "value": true
                    },
                    "workspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').customerId]"
                    },
                    "workspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').primarySharedKey]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "sentinel"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('enableAzureConnectors')]",
            "type": "Microsoft.Resources/deployments",
            "name": "enableAzureConnectors",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/Sentinel2Go/nestedtemplates/azureConnectors.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[variables('uniqueWorkspace')]"
                    },
                    "workspaceId": {
                         "value": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace'))]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('enableMDATPIntegration')]",
            "type": "Microsoft.Security/settings",
            "apiVersion": "2019-01-01",
            "name": "MDATP",
            "kind": "DataExportSettings",
            "properties": {
                "enabled": true
            }
        },
        {
            "condition": "[parameters('ingestMordor')]",
            "type": "Microsoft.Resources/deployments",
            "name": "deployLinuxVM",
            "apiVersion": "2019-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/LinuxVM/azuredeploy.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPublicKey": {
                        "value": "[parameters('adminPublicKey')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "sentinel"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('ingestMordor')]",
            "name": "deployEventHub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('templates/azure/EventHub/azuredeploy.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "projectName": {
                        "value": "MordorEventHub"
                    },
                    "eventHubSku": {
                        "value": "Standard"
                    }
                }
            }
        },
        {
            "condition": "[parameters('ingestMordor')]",
            "name": "mordorIngestion",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "deployLinuxVM",
                "deployEventHub"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extensionName": {
                        "value": "SetupLogstash"
                    },
                    "commandToExecute": {
                        "value": "[concat('bash ingest-mordor.sh -n', ' ', reference('deployEventHub').outputs.EventHubNamespace.value , ' ', '-c', ' ', '\"', reference('deployEventHub').outputs.NamespaceConnectionString.value, '\"', ' ', '-e', ' ', reference('deployEventHub').outputs.EventHubName.value)]"
                    },
                    "fileUris": {
                        "value": [
                            "[uri(parameters('_artifactsLocation'), concat('templates/azure/Sentinel2Go/scripts/ingest-mordor.sh', parameters('_artifactsLocationSasToken')))]"
                        ]
                    },
                    "vmName": {
                        "value": "[reference('deployLinuxVM').outputs.linuxVMName.value]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('ingestMordor')]",
            "name": "logstashSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "mordorIngestion"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "extensionName": {
                        "value": "SetupLogstash"
                    },
                    "commandToExecute": {
                        "value": "[concat('bash logstash-setup.sh -i', ' ', reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').customerId, ' ', '-c', ' ', '\"', reference('deployEventHub').outputs.NamespaceConnectionString.value, '\"', ' ', '-k', ' ', listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').primarySharedKey, ' ', '-u', ' ', parameters('adminUsername'))]"
                    },
                    "fileUris": {
                        "value": [
                            "[uri(parameters('_artifactsLocation'), concat('templates/azure/Sentinel2Go/scripts/logstash-setup.sh', parameters('_artifactsLocationSasToken')))]"
                        ]
                    },
                    "vmName": {
                        "value": "[reference('deployLinuxVM').outputs.linuxVMName.value]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "workspaceName": {
            "type": "string",
            "value": "[variables('uniqueWorkspace')]"
        },
        "workspaceIdOutput": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').customerId]"
        },
        "workspaceKeyOutput": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', variables('uniqueWorkspace')), '2015-11-01-preview').primarySharedKey]"
        }
    }
}