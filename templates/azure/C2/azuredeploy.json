{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended. The password must be at least 8 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "remoteAccessMode": {
            "type": "string",
            "defaultValue": "AllowPublicIP",
            "allowedValues": [
                "AllowPublicIP",
                "AzureBastionHost"
            ],
            "metadata": {
                "description": "Do you want to restrict access to your environment by a Public IP or set up an Azure Bastion Host. If the former, make sure you add your public IP address to the variable 'allowedIPAddresses'"
            }
        },
        "allowedIPAddresses": {
            "type": "string",
            "metadata": {
                "description": "The sourceAddressPrefixes allowed to connect to this deployment"
            },
            "defaultValue": "*"
        },
        "azureBastionHostName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Bastion Host assigned to the Virtual network in this template"
            },
            "defaultValue": "AzureBastionHost"
        },
        "numberOfUbuntuVMs": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 0,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy"
            }
        },
        "ubuntuVMNamePrefix": {
            "type": "string",
            "defaultValue": "C2",
            "metadata": {
                "description": "Prefix name for all Ubuntu virtual machines"
            }
        },
        "ubuntuSKU": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "19.04",
                "20_04-lts"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "identityType": {
            "type": "string",
            "metadata": {
                "description": "The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. - SystemAssigned, UserAssigned, None. Reference: https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines?tabs=json#virtualmachineidentity-object"
            },
            "defaultValue": "None",
            "allowedValues": [
                "SystemAssigned",
                "UserAssigned",
                "None"
            ]
        },
        "userAssignedIdentities": {
            "type": "object",
            "metadata": {
                "description": "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}"
            },
            "defaultValue": {}
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_A2",
                "Standard_A3",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_A2_v2",
                "Standard_A4_v2"
            ],
            "metadata": {
                "description": "Size of the virtual machine. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general"
            }
        },
        "newVirtualNetwork": {
            "type": "bool",
            "metadata": {
                "description": "Is this a new virtual network? If so, set this to true."
            },
            "defaultValue": true
        },
        "existingSubnetId": {
            "type": "string",
            "metadata": {
                "description": "Id of existing subnet used while setting up the network settings for the virtual VM."
            },
            "defaultValue": ""
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Network"
            },
            "defaultValue": "vnet-c2"
        },
        "virtualNetworkAddressRange": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network address range"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "subnetRange": {
            "type": "string",
            "metadata": {
                "description": "subnet range"
            },
            "defaultValue": "10.0.0.0/24"
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet"
            },
            "defaultValue": "snet-c2"
        },
        "azureBastionSubnetRange": {
            "type": "string",
            "metadata": {
                "description": "Address Range of the Azure Bastion service"
            },
            "defaultValue": "192.168.3.0/27"
        },
        "c2Framework": {
            "type": "string",
            "defaultValue": "empire",
            "allowedValues": [
                "empire",
                "covenant",
                "metasploit"
            ],
            "metadata": {
                "description": "C2 framework to deploy"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/OTRF/Blacksmith/master/",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "c2SetupScript": "[uri(parameters('_artifactsLocation'), concat('resources/scripts/bash/Install-C2s.sh', parameters('_artifactsLocationSasToken')))]",
        "dockerSetupScript": "[uri(parameters('_artifactsLocation'), concat('resources/scripts/bash/Install-Docker.sh', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "name": "deployC2VM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), 'templates/azure/Linux/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value" : "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "remoteAccessMode": {
                        "value": "[parameters('remoteAccessMode')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "azureBastionHostName": {
                        "value": "[parameters('azureBastionHostName')]"
                    },
                    "numberOfUbuntuVMs": {
                        "value": "[parameters('numberOfUbuntuVMs')]"
                    },
                    "ubuntuVMNamePrefix": {
                        "value": "[parameters('ubuntuVMNamePrefix')]"
                    },
                    "ubuntuSKU": {
                        "value": "[parameters('ubuntuSKU')]"
                    },
                    "identityType": {
                        "value": "[parameters('identityType')]"
                    },
                    "userAssignedIdentities": {
                        "value": "[parameters('userAssignedIdentities')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "newVirtualNetwork": {
                        "value": "[parameters('newVirtualNetwork')]"
                    },
                    "existingSubnetId": {
                        "value": "[parameters('existingSubnetId')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "azureBastionSubnetRange": {
                        "value": "[parameters('azureBastionSubnetRange')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(reference('deployC2VM').outputs.allLinuxVMsDeployed.value[0].vmName, '/C2Setup')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "deployC2VM"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {},
                "protectedSettings": {
                    "commandToExecute": "[concat('bash Install-C2s.sh -r', ' ', parameters('c2Framework'))]",
                    "fileUris": [
                        "[variables('dockerSetupScript')]",
                        "[variables('c2SetupScript')]"
                    ]
                }
            }
        }
    ],
    "outputs": {
        "vmName": {
            "type": "string",
            "value": "[reference('deployC2VM').outputs.allLinuxVMsDeployed.value[0].vmName]"
        },
        "vmResourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Compute/virtualMachines/', reference('deployC2VM').outputs.allLinuxVMsDeployed.value[0].vmName)]"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[reference('deployC2VM').outputs.virtualNetworkName.value]"
        },
        "virtualNetworkId": {
            "type": "string",
            "value": "[reference('deployC2VM').outputs.virtualNetworkId.value]"
        }
    }
}